<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Anhpngt on Manabie Tech Blog</title><link>/author/anhpngt/</link><description>Recent content in Anhpngt on Manabie Tech Blog</description><generator>Hugo</generator><language>en</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Fri, 01 Apr 2022 13:54:44 +0700</lastBuildDate><atom:link href="/author/anhpngt/index.xml" rel="self" type="application/rss+xml"/><item><title>Create a reusable workflow for GitHub Actions</title><link>/2022/04/create-a-reusable-workflow-for-github-actions/</link><pubDate>Fri, 01 Apr 2022 12:00:00 +0700</pubDate><guid>/2022/04/create-a-reusable-workflow-for-github-actions/</guid><description>This blog post focuses on how we can create a reusable workflow for GitHub Actions. The do&amp;rsquo;s and don&amp;rsquo;ts will be elaborated along the way.
1. What are the available options? There are two major types of workflows that can be reused in Github Actions:
Custom actions Reusable workflows Reusable workflows are quite new. In this blog, we decide to use custom actions (or more specifically, composite actions). The main reason is because we want to run the workflow inside a job, along with other steps (to share caches, tokens, etc&amp;hellip;).</description></item><item><title>Self-hosting Unleash with Kubernetes</title><link>/2022/01/unleash-self-host/</link><pubDate>Tue, 18 Jan 2022 21:24:00 +0700</pubDate><guid>/2022/01/unleash-self-host/</guid><description>In this blog post, we will learn how to self-host Unleash in a Kubernetes cluster.
Why feature toggles? While developing new features for our end-users, we often encounter these 2 problems:
Features are not developed and rolled out in a single night. It often takes several days or even weeks before a feature is fully developed, tested, and deployed. In such cases, we usually have to deploy a piece of that feature to production, and we would need to hide that piece until the feature is fully completed and ready.</description></item></channel></rss>